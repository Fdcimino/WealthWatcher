generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ww_account {
  id                Int                   @id @default(autoincrement())
  accountId         String                @unique @db.VarChar
  mask              String                @db.VarChar
  name              String?               @db.VarChar
  type              String                @db.VarChar
  subtype           String                @db.VarChar
  linkId            Int
  link              ww_link               @relation(fields: [linkId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  account_snapshots ww_account_snapshot[]
  owned_securitys   ww_owned_security[]
  transactions   ww_transaction[]

  @@index([accountId])
}

model ww_account_snapshot {
  id        Int         @id @default(autoincrement())
  balance   Decimal     @db.Decimal(6, 2)
  date      DateTime    @db.Timestamp(6)
  accountId Int?
  account   ww_account? @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ww_link {
  id                Int          @id @default(autoincrement())
  orgName           String       @db.VarChar
  name              String       @db.VarChar
  accessToken       String       @db.VarChar
  transactionCursor String?      @db.VarChar
  userId            Int?
  accounts          ww_account[]
  user              ww_user?     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

//TODO: need to do a spike on the plaid securities feature
model ww_owned_security {
  id           Int         @id @default(autoincrement())
  symbol       String      @db.VarChar
  quantity     Int
  boughtAt     Int
  boughtAtDate DateTime    @db.Timestamp(6)
  accountId    Int?
  account      ww_account? @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ww_user {
  id            Int                @id @default(autoincrement())
  username      String             @unique @db.VarChar
  password      String             @db.VarChar
  firstName     String?            @db.VarChar
  lastName      String?            @db.VarChar
  links         ww_link[]
  budgets       ww_budget[]
  auto_category ww_auto_category[]
}

model ww_transaction {
  id               Int        @id @default(autoincrement())
  accountId        Int
  transactionId    String     @unique @db.VarChar
  amount           Decimal    @db.Decimal(5, 2)
  currencyCode     String?    @db.VarChar
  detailedCategory String?    @db.VarChar
  primaryCategory  String?    @db.VarChar
  name             String?    @db.VarChar
  merchantName     String?    @db.VarChar
  paymentChannel   String     @db.VarChar
  datetime         DateTime   @db.Timestamp(6)
  account          ww_account @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  userCategories   String[]   @db.VarChar(200)
}

model ww_budget {
  id         Int                  @id @default(autoincrement())
  userId     Int?
  user       ww_user?             @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  categories ww_budget_category[]
}

model ww_budget_category {
  id         Int       @id @default(autoincrement())
  budgetId   Int
  name       String
  limit      Decimal   @db.Decimal(5, 2)
  budget     ww_budget @relation(fields: [budgetId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  categories String[]  @db.VarChar(200)
}

model ww_auto_category {
  id               Int     @id @default(autoincrement())
  userId           Int
  merchantName     String?
  detailedCategory String?
  primaryCategory  String?
  category         String
  user             ww_user @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
